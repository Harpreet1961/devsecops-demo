name: Devsecops Demo CI/CD
run-name: CI/CD Pipeline
on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - 'kubernetes/deployment.yaml'  # Ignore changes to this file to prevent loops

jobs: 
  devsecops_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Testing
        run: echo "Running tests..."

  Test_Job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies and run tests
        run: |
          npm install
          npm test

  Static_Code_Analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2 
        with:
          node-version: '18'  
      
      - name: Run static code analysis
        run: |
          echo " Running static code analysis..."
          npm ci 
          npm run lint
  
  Build:
    runs-on: ubuntu-latest
    needs: [Static_Code_Analysis, Test_Job]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
      
      - name: Build the application
        run: |
          echo "Building the application..."
          npm install
          npm run build     
          
          
  Docker_Registry_Login:
   runs-on: ubuntu-latest
   needs: Build
   steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}  

      # - name: Login to GHCR
      #   run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set lowercase repo name
        run: |
          echo "REPO_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Inventory Image
        run: |
           echo "Building Docker image..."
           docker build -t ghcr.io/${REPO_NAME}/inventory:latest .
           docker tag ghcr.io/${REPO_NAME}/inventory:latest ghcr.io/${REPO_NAME}/inventory:${{ github.sha }}

      - name: Scan Image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ghcr.io/${{ env.REPO_NAME }}/inventory:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
           

      - name: Push Inventory Image
        run: |
          echo "Pushing Docker image to GHCR..."
          docker push ghcr.io/${REPO_NAME}/inventory:latest
          docker push ghcr.io/${REPO_NAME}/inventory:${{ github.sha }}


